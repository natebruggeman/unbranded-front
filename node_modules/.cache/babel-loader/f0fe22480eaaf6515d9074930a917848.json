{"ast":null,"code":"var _jsxFileName = \"/Users/natebruggeman/sei-GA/unbranded-react/unbranded-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // useEffect, useState,\n// import {Garments} from \"./Compenents/Garments\"\n// import {AddToCart} from \"./Compenents/AddToCart\"\n// import { Container } from \"semantic-ui-react\"\n\nimport Garments from \"./Components/Garments\";\nimport Header from \"./Components/Header\";\nimport ShowCart from \"./Components/ShowCart\";\nimport EditCartQty from \"./Components/EditCartQty\";\n\nclass App extends Component {\n  constructor() {\n    super(); //storing cart in local storage not in DB \n\n    this.getGarments = async () => {\n      try {\n        const garments = await fetch('http://localhost:8000/list');\n        const garmentsJson = await garments.json();\n        this.setState({\n          garments: garmentsJson\n        });\n      } catch (err) {\n        console.log(err, 'error in catch block');\n        return err;\n      }\n    };\n\n    this.addToCart = (gtin, sizeName, colorName, piecePrice) => {\n      // pushing to cart \n      console.log(this.state.cart);\n      this.state.cart.push({\n        'identifier': gtin,\n        'size': sizeName,\n        'color': colorName,\n        'price': piecePrice,\n        'qty': \"1\"\n      }); //local storage turns everything into an object. You have to stringify.\n\n      localStorage.setItem('cartLocal', JSON.stringify(this.state.cart));\n    };\n\n    this.editCartQty = identifier => {\n      //parsing\n      let parsedCartLocal = JSON.parse(localStorage.cartLocal); //filter to match id\n\n      let cartLocal = parsedCartLocal.filter(parsedCartLocal => parsedCartLocal.identifier === identifier);\n      const poppedCart = cartLocal.pop();\n      console.log(poppedCart);\n    };\n\n    this.deleteItem = identifier => {\n      let parsedCartLocal = JSON.parse(localStorage.cartLocal); //filters out the id of the one we don't want\n\n      let cartLocal = parsedCartLocal.filter(parsedCartLocal => parsedCartLocal.identifier !== identifier); // reset item in localstorage\n\n      localStorage.setItem('cartLocal', JSON.stringify(cartLocal));\n    };\n\n    let totalCart = localStorage.getItem('cartLocal');\n    console.log(totalCart);\n\n    if (totalCart == null) {\n      totalCart = [];\n    } else {\n      totalCart = JSON.parse(totalCart);\n    }\n\n    this.state = {\n      garments: [],\n      cart: totalCart\n    };\n  }\n\n  componentDidMount() {\n    this.getGarments();\n  } // these args are what we get from GarmentItem\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(ShowCart, {\n      cart: this.state.cart,\n      deleteItem: this.deleteItem,\n      editCartQty: this.editCartQty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.state.garments.length > 0 ? React.createElement(Garments, {\n      garments: this.state.garments,\n      addToCart: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App; // const ashList = garmentsJson.filter(function(garment) {\n//   if(garment.colorName === 'Ash'){\n//     return true;\n//   }\n// })\n// const maroonList = garmentsJson.filter(function(garment) {\n//   if(garment.colorName === 'Maroon'){\n//     return true;\n//   }\n// })  \n// const greenList = garmentsJson.filter(function(garment) {\n//   if(garment.colorName === 'Military Green'){\n//     return true;\n//   }\n// })  \n// class GarmentList extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       garments: [],\n//       gtin: [],\n//       size: [],\n//     }\n//   }\n//   componentDidMount(){\n//     this.getGarments();\n//   }\n//   getGarments = async () => {\n//     try {\n//     const garments = await fetch(process.env.REACT_APP_API_URL + '/list', {\n//       credentials: 'include'\n//     });\n//     const parsedGarments = await garments.json();\n//     console.log(parsedGarments);\n//     this.setState({\n//         garments: parsedGarments.data\n//       })\n//     } catch(err){\n//       console.log(err);\n//     }\n//   }\n// }","map":{"version":3,"sources":["/Users/natebruggeman/sei-GA/unbranded-react/unbranded-react/src/App.js"],"names":["React","Component","Garments","Header","ShowCart","EditCartQty","App","constructor","getGarments","garments","fetch","garmentsJson","json","setState","err","console","log","addToCart","gtin","sizeName","colorName","piecePrice","state","cart","push","localStorage","setItem","JSON","stringify","editCartQty","identifier","parsedCartLocal","parse","cartLocal","filter","poppedCart","pop","deleteItem","totalCart","getItem","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// useEffect, useState,\n// import {Garments} from \"./Compenents/Garments\"\n// import {AddToCart} from \"./Compenents/AddToCart\"\n// import { Container } from \"semantic-ui-react\"\nimport Garments from \"./Components/Garments\"\nimport Header from \"./Components/Header\"\nimport ShowCart from \"./Components/ShowCart\"\nimport EditCartQty from \"./Components/EditCartQty\"\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    //storing cart in local storage not in DB \n    let totalCart = localStorage.getItem('cartLocal')\n    console.log(totalCart)\n    if (totalCart == null){\n      totalCart = []\n    } else {\n      totalCart = JSON.parse(totalCart)\n    }\n\n    this.state = {\n      garments: [],\n      cart: totalCart\n    }\n  }\n\n  getGarments = async () => {\n\n    try {\n      const garments = await fetch('http://localhost:8000/list');\n      const garmentsJson = await garments.json();\n\n      this.setState({\n        garments:garmentsJson\n      })\n\n    } catch (err) {\n      console.log(err, 'error in catch block')\n      return err\n    }\n\n\n  }\n  componentDidMount(){\n    this.getGarments()\n  }\n  // these args are what we get from GarmentItem\n  addToCart = (gtin, sizeName, colorName, piecePrice) => {\n    // pushing to cart \n    console.log(this.state.cart);\n    this.state.cart.push({'identifier': gtin,\n                          'size': sizeName,\n                          'color': colorName,\n                          'price': piecePrice,\n                           'qty': \"1\"} )\n    //local storage turns everything into an object. You have to stringify.\n    localStorage.setItem('cartLocal', JSON.stringify(this.state.cart))\n  }\n\n  // editing quantity in cart \n  editCartQty = (identifier) => {\n    //parsing\n    let parsedCartLocal = JSON.parse(localStorage.cartLocal)\n    //filter to match id\n    let cartLocal = parsedCartLocal.filter(parsedCartLocal => parsedCartLocal.identifier === identifier)\n    \n    const poppedCart = cartLocal.pop();\n    console.log(poppedCart);\n\n    \n\n  }\n\n  //DELETE FROM CART\n  deleteItem = (identifier) => {\n    let parsedCartLocal = JSON.parse(localStorage.cartLocal)\n    //filters out the id of the one we don't want\n    let cartLocal = parsedCartLocal.filter(parsedCartLocal => parsedCartLocal.identifier !== identifier)\n    // reset item in localstorage\n    localStorage.setItem('cartLocal', JSON.stringify(cartLocal))\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Header />\n\n          <ShowCart \n            cart={this.state.cart} \n            deleteItem = {this.deleteItem}\n            editCartQty = {this.editCartQty}\n\n            />\n\n        {this.state.garments.length > 0\n          ?\n          <Garments \n            garments={this.state.garments} \n            addToCart={this.addToCart}\n          />\n          :\n          null\n        }\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n      // const ashList = garmentsJson.filter(function(garment) {\n      //   if(garment.colorName === 'Ash'){\n      //     return true;\n      //   }\n      // })\n\n\n      // const maroonList = garmentsJson.filter(function(garment) {\n      //   if(garment.colorName === 'Maroon'){\n      //     return true;\n      //   }\n      // })  \n\n\n\n      // const greenList = garmentsJson.filter(function(garment) {\n      //   if(garment.colorName === 'Military Green'){\n      //     return true;\n      //   }\n      // })  \n\n\n\n\n\n\n// class GarmentList extends Component {\n//   constructor(props){\n//     super(props);\n\n//     this.state = {\n//       garments: [],\n//       gtin: [],\n//       size: [],\n\n//     }\n//   }\n//   componentDidMount(){\n//     this.getGarments();\n//   }\n//   getGarments = async () => {\n//     try {\n//     const garments = await fetch(process.env.REACT_APP_API_URL + '/list', {\n//       credentials: 'include'\n//     });\n//     const parsedGarments = await garments.json();\n//     console.log(parsedGarments);\n\n//     this.setState({\n//         garments: parsedGarments.data\n//       })\n\n//     } catch(err){\n//       console.log(err);\n//     }\n//   }\n\n// }\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}