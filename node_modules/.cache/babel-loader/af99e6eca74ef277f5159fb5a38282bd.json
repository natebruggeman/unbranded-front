{"ast":null,"code":"var _jsxFileName = \"/Users/natebruggeman/sei-GA/unbranded-react/unbranded-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // useEffect, useState,\n// import {Garments} from \"./Compenents/Garments\"\n// import {AddToCart} from \"./Compenents/AddToCart\"\n// import { Container } from \"semantic-ui-react\"\n\nimport Garments from \"./Components/Garments\";\nimport Header from \"./Components/Header\";\nimport ShowCart from \"./Components/ShowCart\";\n\nclass App extends Component {\n  constructor() {\n    super(); //storing cart in client not in DB!! \n\n    this.getGarments = async () => {\n      try {\n        const garments = await fetch('http://localhost:8000/list');\n        const garmentsJson = await garments.json();\n        this.setState({\n          garments: garmentsJson\n        });\n      } catch (err) {\n        console.log(err, 'error in catch block');\n        return err;\n      }\n    };\n\n    this.addToCart = (gtin, sizeName, colorName, piecePrice) => {\n      // pushing to cart \n      console.log(this.state.cart);\n      this.state.cart.push({\n        'identifier': gtin,\n        'size': sizeName,\n        'color': colorName,\n        'price': piecePrice,\n        'qty': 1\n      }); //local storage turns everything into an object. You have to stringify.\n\n      localStorage.setItem('cartLocal', JSON.stringify(this.state.cart));\n    };\n\n    this.deleteItem = identifier => {\n      // let deleteId = this.state.cart.filter(function(id){\n      //   return id.identifier == \"identifier\"\n      // })\n      console.log(identifier);\n      console.log('~~~~~~~~~~~~~~~~~~');\n      const parsedCartLocal = JSON.parse(localStorage.cartLocal); // console.log(parsedCartLocal)\n\n      const parsedItem = parsedCartLocal.filter(parsedCartLocal => parsedCartLocal.identifier === identifier);\n      console.log(\"this is parsed item\", parsedItem);\n      console.log('~~~~~~~~~~~~~~~~~~'); // const newParsedCart = parsedCartLocal.pop([0])\n      // console.log(newParsedCart)\n\n      console.log('~~~~~~~~~~~~~~~~~~');\n      console.log(parsedCartLocal); // parsedCartLocal.filter(foo => foo === identifier)\n      //   console.log(foo)\n      // removes from cart \n      // console.log(this.state.cart.filter(function(id){\n      //   id === identifier\n      // })\n      // console.log(this.state.cart)\n      // this.state.cart.pop([0])\n      // localStorage.setItem('cartLocal', JSON.stringify(this.state.cart))\n    };\n\n    let totalCart = localStorage.getItem('cartLocal');\n    console.log(totalCart);\n\n    if (totalCart == null) {\n      totalCart = [];\n    } else {\n      totalCart = JSON.parse(totalCart);\n    }\n\n    this.state = {\n      garments: [],\n      cart: totalCart\n    };\n  }\n\n  componentDidMount() {\n    this.getGarments();\n  } // these args are what we get from GarmentItem\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(ShowCart, {\n      cart: this.state.cart,\n      deleteItem: this.deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), this.state.garments.length > 0 ? React.createElement(Garments, {\n      garments: this.state.garments,\n      addToCart: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App; // const ashList = garmentsJson.filter(function(garment) {\n//   if(garment.colorName === 'Ash'){\n//     return true;\n//   }\n// })\n// const maroonList = garmentsJson.filter(function(garment) {\n//   if(garment.colorName === 'Maroon'){\n//     return true;\n//   }\n// })  \n// const greenList = garmentsJson.filter(function(garment) {\n//   if(garment.colorName === 'Military Green'){\n//     return true;\n//   }\n// })  \n// class GarmentList extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       garments: [],\n//       gtin: [],\n//       size: [],\n//     }\n//   }\n//   componentDidMount(){\n//     this.getGarments();\n//   }\n//   getGarments = async () => {\n//     try {\n//     const garments = await fetch(process.env.REACT_APP_API_URL + '/list', {\n//       credentials: 'include'\n//     });\n//     const parsedGarments = await garments.json();\n//     console.log(parsedGarments);\n//     this.setState({\n//         garments: parsedGarments.data\n//       })\n//     } catch(err){\n//       console.log(err);\n//     }\n//   }\n// }","map":{"version":3,"sources":["/Users/natebruggeman/sei-GA/unbranded-react/unbranded-react/src/App.js"],"names":["React","Component","Garments","Header","ShowCart","App","constructor","getGarments","garments","fetch","garmentsJson","json","setState","err","console","log","addToCart","gtin","sizeName","colorName","piecePrice","state","cart","push","localStorage","setItem","JSON","stringify","deleteItem","identifier","parsedCartLocal","parse","cartLocal","parsedItem","filter","totalCart","getItem","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// useEffect, useState,\n// import {Garments} from \"./Compenents/Garments\"\n// import {AddToCart} from \"./Compenents/AddToCart\"\n// import { Container } from \"semantic-ui-react\"\nimport Garments from \"./Components/Garments\"\nimport Header from \"./Components/Header\"\nimport ShowCart from \"./Components/ShowCart\"\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    //storing cart in client not in DB!! \n    let totalCart = localStorage.getItem('cartLocal')\n    console.log(totalCart)\n    if (totalCart == null){\n      totalCart = []\n    } else {\n      totalCart = JSON.parse(totalCart)\n    }\n\n    this.state = {\n      garments: [],\n      cart: totalCart\n    }\n  }\n\n  getGarments = async () => {\n\n    try {\n      const garments = await fetch('http://localhost:8000/list');\n      const garmentsJson = await garments.json();\n\n      this.setState({\n        garments:garmentsJson\n      })\n\n    } catch (err) {\n      console.log(err, 'error in catch block')\n      return err\n    }\n\n\n  }\n  componentDidMount(){\n    this.getGarments()\n  }\n  // these args are what we get from GarmentItem\n  addToCart = (gtin, sizeName, colorName, piecePrice) => {\n    // pushing to cart \n    console.log(this.state.cart);\n    this.state.cart.push({'identifier': gtin,\n                          'size': sizeName,\n                          'color': colorName,\n                          'price': piecePrice,\n                           'qty': 1} )\n    //local storage turns everything into an object. You have to stringify.\n    localStorage.setItem('cartLocal', JSON.stringify(this.state.cart))\n  }\n\n  //DELETE FROM CART\n  deleteItem = (identifier) => {\n    // let deleteId = this.state.cart.filter(function(id){\n    //   return id.identifier == \"identifier\"\n    // })\n\n    console.log(identifier)\n    \n\n    console.log('~~~~~~~~~~~~~~~~~~');\n\n\n    const parsedCartLocal = JSON.parse(localStorage.cartLocal)\n    // console.log(parsedCartLocal)\n\n\n\n    const parsedItem = parsedCartLocal.filter(parsedCartLocal => parsedCartLocal.identifier === identifier)\n\n    console.log(\"this is parsed item\", parsedItem);\n    console.log('~~~~~~~~~~~~~~~~~~');\n\n    // const newParsedCart = parsedCartLocal.pop([0])\n\n    // console.log(newParsedCart)\n    console.log('~~~~~~~~~~~~~~~~~~');\n    console.log(parsedCartLocal)\n\n\n\n\n    // parsedCartLocal.filter(foo => foo === identifier)\n    //   console.log(foo)\n      \n    // removes from cart \n    // console.log(this.state.cart.filter(function(id){\n    //   id === identifier\n    // })\n    // console.log(this.state.cart)\n    // this.state.cart.pop([0])\n    // localStorage.setItem('cartLocal', JSON.stringify(this.state.cart))\n    \n\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Header />\n\n          <ShowCart cart={this.state.cart} deleteItem = {this.deleteItem}/>\n\n        {this.state.garments.length > 0\n          ?\n          <Garments \n            garments={this.state.garments} \n            addToCart={this.addToCart}\n          />\n          :\n          null\n        }\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n      // const ashList = garmentsJson.filter(function(garment) {\n      //   if(garment.colorName === 'Ash'){\n      //     return true;\n      //   }\n      // })\n\n\n      // const maroonList = garmentsJson.filter(function(garment) {\n      //   if(garment.colorName === 'Maroon'){\n      //     return true;\n      //   }\n      // })  \n\n\n\n      // const greenList = garmentsJson.filter(function(garment) {\n      //   if(garment.colorName === 'Military Green'){\n      //     return true;\n      //   }\n      // })  \n\n\n\n\n\n\n// class GarmentList extends Component {\n//   constructor(props){\n//     super(props);\n\n//     this.state = {\n//       garments: [],\n//       gtin: [],\n//       size: [],\n\n//     }\n//   }\n//   componentDidMount(){\n//     this.getGarments();\n//   }\n//   getGarments = async () => {\n//     try {\n//     const garments = await fetch(process.env.REACT_APP_API_URL + '/list', {\n//       credentials: 'include'\n//     });\n//     const parsedGarments = await garments.json();\n//     console.log(parsedGarments);\n\n//     this.setState({\n//         garments: parsedGarments.data\n//       })\n\n//     } catch(err){\n//       console.log(err);\n//     }\n//   }\n\n// }\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}